const e=JSON.parse('{"key":"v-4f1883c0","path":"/ts/advance/%E7%BB%93%E6%9E%84%E5%8C%96%E7%B1%BB%E5%9E%8B.html","title":"类型兼容：结构化类型","lang":"zh-CN","frontmatter":{"description":"TypeScript 是一种基于 JavaScript 的静态类型语言，它为 JavaScript 添加了类型系统，并提供了强大的类型检查和自动补全功能。TypeScript 的类型系统有一个非常重要的特性，那就是 \\"鸭子类型\\"（Duck Typing）或 \\"结构化类型\\"（Structural Typing）（文章会以\\"鸭子类型\\"（Duck Typin...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/coding-time/ts/advance/%E7%BB%93%E6%9E%84%E5%8C%96%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"类型兼容：结构化类型"}],["meta",{"property":"og:description","content":"TypeScript 是一种基于 JavaScript 的静态类型语言，它为 JavaScript 添加了类型系统，并提供了强大的类型检查和自动补全功能。TypeScript 的类型系统有一个非常重要的特性，那就是 \\"鸭子类型\\"（Duck Typing）或 \\"结构化类型\\"（Structural Typing）（文章会以\\"鸭子类型\\"（Duck Typin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T02:59:11.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-09T02:59:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型兼容：结构化类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T02:59:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 鸭子类型：定义和示例","slug":"_1-鸭子类型-定义和示例","link":"#_1-鸭子类型-定义和示例","children":[]},{"level":2,"title":"2. 鸭子类型的优点","slug":"_2-鸭子类型的优点","link":"#_2-鸭子类型的优点","children":[{"level":3,"title":"2.1 代码的灵活性","slug":"_2-1-代码的灵活性","link":"#_2-1-代码的灵活性","children":[]},{"level":3,"title":"2.2 代码的复用","slug":"_2-2-代码的复用","link":"#_2-2-代码的复用","children":[]},{"level":3,"title":"2.3 与 JavaScript 的互操作性","slug":"_2-3-与-javascript-的互操作性","link":"#_2-3-与-javascript-的互操作性","children":[]}]},{"level":2,"title":"3. 鸭子类型的局限性","slug":"_3-鸭子类型的局限性","link":"#_3-鸭子类型的局限性","children":[{"level":3,"title":"3.1 类型安全","slug":"_3-1-类型安全","link":"#_3-1-类型安全","children":[]},{"level":3,"title":"3.2 易读性和可维护性","slug":"_3-2-易读性和可维护性","link":"#_3-2-易读性和可维护性","children":[]}]},{"level":2,"title":"4. 使用鸭子类型的最佳实践","slug":"_4-使用鸭子类型的最佳实践","link":"#_4-使用鸭子类型的最佳实践","children":[{"level":3,"title":"4.1 清晰地定义接口","slug":"_4-1-清晰地定义接口","link":"#_4-1-清晰地定义接口","children":[]},{"level":3,"title":"4.2 适度使用鸭子类型","slug":"_4-2-适度使用鸭子类型","link":"#_4-2-适度使用鸭子类型","children":[]}]}],"git":{"createdTime":1688871551000,"updatedTime":1688871551000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":6.65,"words":1995},"filePathRelative":"ts/advance/结构化类型.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
