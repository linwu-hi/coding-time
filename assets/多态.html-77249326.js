const t=JSON.parse('{"key":"v-28fbfd96","path":"/dart/oop/%E5%A4%9A%E6%80%81.html","title":"多态","lang":"zh-CN","frontmatter":{"description":"多态是面向对象编程的三大特性之一（封装、继承和多态）。在 Dart 中，多态表现为父类引用指向子类对象。这样，父类的引用就可以根据当前指向的子类对象，动态地调用其相应的方法，这是面向对象非常重要的一个特性。 在上述例子中，feedAnimal 函数接受一个 Animal 类型的参数，然而在运行时，这个参数可以是任何一个 Animal 的子类的实例。这就...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/coding-time/dart/oop/%E5%A4%9A%E6%80%81.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"多态"}],["meta",{"property":"og:description","content":"多态是面向对象编程的三大特性之一（封装、继承和多态）。在 Dart 中，多态表现为父类引用指向子类对象。这样，父类的引用就可以根据当前指向的子类对象，动态地调用其相应的方法，这是面向对象非常重要的一个特性。 在上述例子中，feedAnimal 函数接受一个 Animal 类型的参数，然而在运行时，这个参数可以是任何一个 Animal 的子类的实例。这就..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T02:59:11.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-09T02:59:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多态\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T02:59:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[]},{"level":2,"title":"接口","slug":"接口","link":"#接口","children":[]}],"git":{"createdTime":1688871551000,"updatedTime":1688871551000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":1.65,"words":495},"filePathRelative":"dart/oop/多态.md","localizedDate":"2023年7月9日","autoDesc":true}');export{t as data};
