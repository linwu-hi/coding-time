const e=JSON.parse('{"key":"v-64629ad3","path":"/js/perf/%E7%9B%91%E6%B5%8BDOM%E5%8F%98%E5%8C%96%E7%9A%84%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7.html","title":"MutationObserver：监测DOM变化的强大工具","lang":"zh-CN","frontmatter":{"description":"引言 在Web开发中，操作和监测DOM元素的变化是一项常见的任务。MutationObserver是JavaScript提供的一个强大的API，用于异步监测DOM树的变化，并在发生变化时执行相应的操作。本文将详细介绍MutationObserver的属性、应用场景以及使用示例，帮助读者充分理解和应用这一强大的工具。 1. MutationObserve...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/coding-time/js/perf/%E7%9B%91%E6%B5%8BDOM%E5%8F%98%E5%8C%96%E7%9A%84%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"MutationObserver：监测DOM变化的强大工具"}],["meta",{"property":"og:description","content":"引言 在Web开发中，操作和监测DOM元素的变化是一项常见的任务。MutationObserver是JavaScript提供的一个强大的API，用于异步监测DOM树的变化，并在发生变化时执行相应的操作。本文将详细介绍MutationObserver的属性、应用场景以及使用示例，帮助读者充分理解和应用这一强大的工具。 1. MutationObserve..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T02:59:11.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-09T02:59:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MutationObserver：监测DOM变化的强大工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T02:59:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"1. MutationObserver简介","slug":"_1-mutationobserver简介","link":"#_1-mutationobserver简介","children":[]},{"level":2,"title":"2. MutationObserver的属性","slug":"_2-mutationobserver的属性","link":"#_2-mutationobserver的属性","children":[]},{"level":2,"title":"3. MutationObserver的应用场景","slug":"_3-mutationobserver的应用场景","link":"#_3-mutationobserver的应用场景","children":[{"level":3,"title":"3.1 动态内容加载","slug":"_3-1-动态内容加载","link":"#_3-1-动态内容加载","children":[]},{"level":3,"title":"3.2 表单验证","slug":"_3-2-表单验证","link":"#_3-2-表单验证","children":[]},{"level":3,"title":"3. 响应式布局","slug":"_3-响应式布局","link":"#_3-响应式布局","children":[]},{"level":3,"title":"3.4 自定义组件开发","slug":"_3-4-自定义组件开发","link":"#_3-4-自定义组件开发","children":[]}]},{"level":2,"title":"4. 使用MutationObserver的示例","slug":"_4-使用mutationobserver的示例","link":"#_4-使用mutationobserver的示例","children":[{"level":3,"title":"4.1 监测元素属性变化","slug":"_4-1-监测元素属性变化","link":"#_4-1-监测元素属性变化","children":[]},{"level":3,"title":"4.2 监测子元素的添加或移除","slug":"_4-2-监测子元素的添加或移除","link":"#_4-2-监测子元素的添加或移除","children":[]},{"level":3,"title":"4.3 监测文本节点的内容变化","slug":"_4-3-监测文本节点的内容变化","link":"#_4-3-监测文本节点的内容变化","children":[]}]},{"level":2,"title":"5. MutationObserver的浏览器兼容性","slug":"_5-mutationobserver的浏览器兼容性","link":"#_5-mutationobserver的浏览器兼容性","children":[]},{"level":2,"title":"6. 总结","slug":"_6-总结","link":"#_6-总结","children":[]},{"level":2,"title":"7. 参考资料","slug":"_7-参考资料","link":"#_7-参考资料","children":[]}],"git":{"createdTime":1688871551000,"updatedTime":1688871551000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":6.61,"words":1984},"filePathRelative":"js/perf/监测DOM变化的强大工具.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
