const e=JSON.parse('{"key":"v-16c320ad","path":"/js/advance/Iterator%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%9A%E7%AE%80%E5%8C%96%E9%9B%86%E5%90%88%E9%81%8D%E5%8E%86%E7%9A%84%E5%88%A9%E5%99%A8.html","title":"Iterator 迭代器：简化集合遍历的利器","lang":"zh-CN","frontmatter":{"description":"引言 在 JavaScript 中，迭代器（Iterator）是一种用于遍历集合的接口。迭代器提供了一种统一的方式来访问集合中的元素，无论集合的类型和内部结构如何。通过使用迭代器，我们可以轻松地遍历数组、对象、Map、Set 等各种数据结构，并进行相应的操作。本文将详细介绍迭代器的概念、属性、应用场景，并提供相关的代码示例。 1. 迭代器的概念 迭代器...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/coding-time/js/advance/Iterator%E8%BF%AD%E4%BB%A3%E5%99%A8%EF%BC%9A%E7%AE%80%E5%8C%96%E9%9B%86%E5%90%88%E9%81%8D%E5%8E%86%E7%9A%84%E5%88%A9%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"Iterator 迭代器：简化集合遍历的利器"}],["meta",{"property":"og:description","content":"引言 在 JavaScript 中，迭代器（Iterator）是一种用于遍历集合的接口。迭代器提供了一种统一的方式来访问集合中的元素，无论集合的类型和内部结构如何。通过使用迭代器，我们可以轻松地遍历数组、对象、Map、Set 等各种数据结构，并进行相应的操作。本文将详细介绍迭代器的概念、属性、应用场景，并提供相关的代码示例。 1. 迭代器的概念 迭代器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T02:59:11.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-09T02:59:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Iterator 迭代器：简化集合遍历的利器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T02:59:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"1. 迭代器的概念","slug":"_1-迭代器的概念","link":"#_1-迭代器的概念","children":[]},{"level":2,"title":"2. 迭代器的属性","slug":"_2-迭代器的属性","link":"#_2-迭代器的属性","children":[]},{"level":2,"title":"3. 迭代器的应用场景","slug":"_3-迭代器的应用场景","link":"#_3-迭代器的应用场景","children":[{"level":3,"title":"3.1 数组遍历","slug":"_3-1-数组遍历","link":"#_3-1-数组遍历","children":[]},{"level":3,"title":"3.2 对象遍历","slug":"_3-2-对象遍历","link":"#_3-2-对象遍历","children":[]},{"level":3,"title":"3.3 Map 遍历","slug":"_3-3-map-遍历","link":"#_3-3-map-遍历","children":[]},{"level":3,"title":"3.4 Set 遍历","slug":"_3-4-set-遍历","link":"#_3-4-set-遍历","children":[]}]},{"level":2,"title":"4. 自定义迭代器","slug":"_4-自定义迭代器","link":"#_4-自定义迭代器","children":[]},{"level":2,"title":"结论","slug":"结论","link":"#结论","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1688871551000,"updatedTime":1688871551000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":4.36,"words":1309},"filePathRelative":"js/advance/Iterator迭代器：简化集合遍历的利器.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
