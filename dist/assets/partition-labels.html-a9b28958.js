const t=JSON.parse('{"key":"v-53c5ff76","path":"/lc/algorithms/greedy-algorithm/partition-labels.html","title":"划分字母区间","lang":"zh-CN","frontmatter":{"description":"题目描述 给定一个字符串 S，将字符串划分为尽可能多的片段，使得每个字母最多出现在一个片段中。返回每个片段的长度列表。 解题步骤 为了解决划分字母区间的问题，我们可以使用贪心算法来解决。贪心算法的思路是尽量选择包含较大字母范围的片段，以确保每个字母只出现在一个片段中。 我们按照以下步骤进行解题： 1. 创建一个字母表 lastIndex 来存储每个字母...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/lc/algorithms/greedy-algorithm/partition-labels.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"划分字母区间"}],["meta",{"property":"og:description","content":"题目描述 给定一个字符串 S，将字符串划分为尽可能多的片段，使得每个字母最多出现在一个片段中。返回每个片段的长度列表。 解题步骤 为了解决划分字母区间的问题，我们可以使用贪心算法来解决。贪心算法的思路是尽量选择包含较大字母范围的片段，以确保每个字母只出现在一个片段中。 我们按照以下步骤进行解题： 1. 创建一个字母表 lastIndex 来存储每个字母..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-14T16:27:54.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-14T16:27:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"划分字母区间\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-14T16:27:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"解题步骤","slug":"解题步骤","link":"#解题步骤","children":[]}],"git":{"createdTime":1689352074000,"updatedTime":1689352074000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":1.47,"words":441},"filePathRelative":"lc/algorithms/greedy-algorithm/partition-labels.md","localizedDate":"2023年7月15日","autoDesc":true}');export{t as data};
