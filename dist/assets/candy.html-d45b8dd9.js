import{_ as n,o as s,c as a,d as p}from"./app-2d6feb9f.js";const t={},e=p(`<h1 id="分糖果" tabindex="-1"><a class="header-anchor" href="#分糖果" aria-hidden="true">#</a> 分糖果</h1><h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述" aria-hidden="true">#</a> 题目描述</h2><p>给定一个整数数组 <code>ratings</code>，表示每个孩子的评分。现在你要按照以下规则给这些孩子分糖果：</p><ul><li>每个孩子至少分配到 1 个糖果。</li><li>如果一个孩子的评分比他相邻的孩子高，那么他应该得到更多的糖果。</li></ul><p>你需要计算出最少需要分配多少糖果才能满足上述要求。</p><h2 id="解题步骤" tabindex="-1"><a class="header-anchor" href="#解题步骤" aria-hidden="true">#</a> 解题步骤</h2><p>为了解决分糖果的问题，我们可以使用贪心算法来解决。</p><ol><li>首先初始化一个长度为 <code>ratings.length</code> 的糖果数组 <code>candies</code>，用于记录每个孩子分配到的糖果数量，初始值都为 1。</li><li>从左到右遍历 <code>ratings</code> 数组，比较当前孩子的评分与前一个孩子的评分： <ul><li>如果当前孩子的评分大于前一个孩子的评分，将当前孩子分配到的糖果数量设为前一个孩子分配到的糖果数量加一。</li><li>否则，不做任何操作。</li></ul></li><li>从右到左再次遍历 <code>ratings</code> 数组，比较当前孩子的评分与后一个孩子的评分： <ul><li>如果当前孩子的评分大于后一个孩子的评分，并且当前孩子分配到的糖果数量小于等于后一个孩子分配到的糖果数量，将当前孩子分配到的糖果数量设为后一个孩子分配到的糖果数量加一。</li><li>否则，不做任何操作。</li></ul></li><li>遍历完成后，将糖果数组 <code>candies</code> 中的所有元素相加，得到最少需要分配的糖果数量。</li></ol><p>下面是使用贪心算法解决分糖果问题的算法框架：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">minCandies</span><span class="token punctuation">(</span><span class="token parameter">ratings</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> candies <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>ratings<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ratings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ratings<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> ratings<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      candies<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> candies<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> ratings<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ratings<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> ratings<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> candies<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> candies<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      candies<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> candies<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> candies<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span> candy</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> sum <span class="token operator">+</span> candy<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","candy.html.vue"]]);export{r as default};
