const e=JSON.parse('{"key":"v-152fdad4","path":"/ts/advance/%E6%B3%9B%E5%9E%8B%E5%92%8C%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D.html","title":"泛型和类型体操","lang":"zh-CN","frontmatter":{"description":"泛型和类型体操（Type Gymnastics）是 TypeScript 中高级类型系统的重要组成部分。它们提供了强大的工具和技巧，用于处理复杂的类型操作和转换。 泛型（Generics） 1. 泛型函数 泛型函数允许我们在函数定义中使用类型参数，以便在函数调用时动态指定类型。例如： 在上面的示例中，identity 函数使用类型参数 T，并返回与输入...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/ts/advance/%E6%B3%9B%E5%9E%8B%E5%92%8C%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"泛型和类型体操"}],["meta",{"property":"og:description","content":"泛型和类型体操（Type Gymnastics）是 TypeScript 中高级类型系统的重要组成部分。它们提供了强大的工具和技巧，用于处理复杂的类型操作和转换。 泛型（Generics） 1. 泛型函数 泛型函数允许我们在函数定义中使用类型参数，以便在函数调用时动态指定类型。例如： 在上面的示例中，identity 函数使用类型参数 T，并返回与输入..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-26T16:44:57.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-08-26T16:44:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"泛型和类型体操\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-26T16:44:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"泛型（Generics）","slug":"泛型-generics","link":"#泛型-generics","children":[{"level":3,"title":"1. 泛型函数","slug":"_1-泛型函数","link":"#_1-泛型函数","children":[]},{"level":3,"title":"2. 泛型接口","slug":"_2-泛型接口","link":"#_2-泛型接口","children":[]},{"level":3,"title":"3. 泛型类","slug":"_3-泛型类","link":"#_3-泛型类","children":[]}]},{"level":2,"title":"类型体操（Type Gymnastics）","slug":"类型体操-type-gymnastics","link":"#类型体操-type-gymnastics","children":[{"level":3,"title":"1. 条件类型（Conditional Types）","slug":"_1-条件类型-conditional-types","link":"#_1-条件类型-conditional-types","children":[]},{"level":3,"title":"2. keyof 操作符和索引访问类型","slug":"_2-keyof-操作符和索引访问类型","link":"#_2-keyof-操作符和索引访问类型","children":[]},{"level":3,"title":"3. infer 关键字","slug":"_3-infer-关键字","link":"#_3-infer-关键字","children":[]}]},{"level":2,"title":"extends 关键字和类型约束","slug":"extends-关键字和类型约束","link":"#extends-关键字和类型约束","children":[{"level":3,"title":"泛型函数Util","slug":"泛型函数util","link":"#泛型函数util","children":[]},{"level":3,"title":"Exclude<T, U>","slug":"exclude-t-u","link":"#exclude-t-u","children":[]},{"level":3,"title":"Omit<T, K>","slug":"omit-t-k","link":"#omit-t-k","children":[]},{"level":3,"title":"Readonly<T>","slug":"readonly-t","link":"#readonly-t","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1688871551000,"updatedTime":1693068297000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":2}]},"readingTime":{"minutes":7.44,"words":2231},"filePathRelative":"ts/advance/泛型和类型体操.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
