import{_ as a,r as n,o as c,c as i,a as e,b as t,e as o,d as s}from"./app-2d6feb9f.js";const d={},h=s('<h1 id="knuth–morris–pratt-算法" tabindex="-1"><a class="header-anchor" href="#knuth–morris–pratt-算法" aria-hidden="true">#</a> Knuth–Morris–Pratt 算法</h1><p>Knuth–Morris–Pratt 字符串搜索算法（或 KMP 算法）通过利用以下观察结果，在主文本字符串 <code>T</code> 中搜索单词 <code>W</code> 的出现。当出现不匹配时，单词本身提供了足够的信息来确定下一次匹配可以开始的位置，从而避免重新检查先前匹配的字符。</p><h2 id="复杂度" tabindex="-1"><a class="header-anchor" href="#复杂度" aria-hidden="true">#</a> 复杂度</h2><ul><li><strong>时间复杂度：</strong> <code>O(|W| + |T|)</code>（比朴素算法 <code>O(|W| * |T|)</code> 更快）</li><li><strong>空间复杂度：</strong> <code>O(|W|)</code></li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',5),l={href:"https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.youtube.com/watch?v=GTJr8OvyEVQ&list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8",target:"_blank",rel:"noopener noreferrer"};function _(p,f){const r=n("ExternalLinkIcon");return c(),i("div",null,[h,e("ul",null,[e("li",null,[e("a",l,[t("维基百科"),o(r)])]),e("li",null,[e("a",u,[t("YouTube"),o(r)])])])])}const x=a(d,[["render",_],["__file","index.html.vue"]]);export{x as default};
