const e=JSON.parse('{"key":"v-7c2ac3c0","path":"/js/advance/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96.html","title":"前端模块化","lang":"zh-CN","frontmatter":{"description":"引言 前端开发中，代码的组织和管理一直是开发者面临的一大挑战。随着Web应用日益复杂，对代码结构和组织的需求也更为明显。这种背景下，模块化编程应运而生，开发者们可以将复杂的代码拆分为可管理和可重用的模块。在本文中，我们将通过实际代码示例，来探索前端模块化的发展历程及各种模块化方案的实现原理。 前端模块化的发展历程 1.全局函数式编程 在早期的Web开发...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/js/advance/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"前端模块化"}],["meta",{"property":"og:description","content":"引言 前端开发中，代码的组织和管理一直是开发者面临的一大挑战。随着Web应用日益复杂，对代码结构和组织的需求也更为明显。这种背景下，模块化编程应运而生，开发者们可以将复杂的代码拆分为可管理和可重用的模块。在本文中，我们将通过实际代码示例，来探索前端模块化的发展历程及各种模块化方案的实现原理。 前端模块化的发展历程 1.全局函数式编程 在早期的Web开发..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T02:59:11.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-09T02:59:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端模块化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T02:59:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"前端模块化的发展历程","slug":"前端模块化的发展历程","link":"#前端模块化的发展历程","children":[{"level":3,"title":"1.全局函数式编程","slug":"_1-全局函数式编程","link":"#_1-全局函数式编程","children":[]},{"level":3,"title":"2.命名空间模式","slug":"_2-命名空间模式","link":"#_2-命名空间模式","children":[]},{"level":3,"title":"3.CommonJS","slug":"_3-commonjs","link":"#_3-commonjs","children":[]},{"level":3,"title":"4.AMD（Asynchronous Module Definition）","slug":"_4-amd-asynchronous-module-definition","link":"#_4-amd-asynchronous-module-definition","children":[]},{"level":3,"title":"5.UMD（Universal Module Definition）","slug":"_5-umd-universal-module-definition","link":"#_5-umd-universal-module-definition","children":[]},{"level":3,"title":"6.ES6模块化","slug":"_6-es6模块化","link":"#_6-es6模块化","children":[]}]},{"level":2,"title":"结论","slug":"结论","link":"#结论","children":[]}],"git":{"createdTime":1688871551000,"updatedTime":1688871551000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":4.33,"words":1299},"filePathRelative":"js/advance/前端模块化.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
