import{_ as n,o as s,c as a,d as p}from"./app-2477bd15.js";const t={},e=p(`<h1 id="从排序数组中删除重复项" tabindex="-1"><a class="header-anchor" href="#从排序数组中删除重复项" aria-hidden="true">#</a> 从排序数组中删除重复项</h1><h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> <strong>问题描述</strong>：</h2><p>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p><p>你不需要考虑数组中超出新长度后面的元素。</p><p>示例：</p><p>给定数组 nums = [1,1,2],</p><p>函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。</p><h2 id="解题步骤" tabindex="-1"><a class="header-anchor" href="#解题步骤" aria-hidden="true">#</a> <strong>解题步骤</strong>：</h2><ol><li><p>首先，我们需要确认数组是排序的。如果数组没有排序，我们需要先对其进行排序。</p></li><li><p>设置两个指针，一个快指针，一个慢指针。快指针用于遍历数组，慢指针用于标记非重复元素的最后一个位置。</p></li><li><p>当快指针遍历数组时，比较快指针和慢指针指向的元素，如果不相等，说明遇到了新的元素，将慢指针后移一位，并将快指针指向的元素值赋给慢指针。</p></li><li><p>当快指针遍历完整个数组后，慢指针的位置（加1）就是数组新的长度。</p></li></ol><h2 id="解题框架" tabindex="-1"><a class="header-anchor" href="#解题框架" aria-hidden="true">#</a> <strong>解题框架</strong>：</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","remove-duplicates-from-sorted-array.html.vue"]]);export{r as default};
