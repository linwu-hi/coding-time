const e=JSON.parse('{"key":"v-2e3bcf11","path":"/lc/algorithms/graph/bellman-ford/","title":"Bellman-Ford 算法","lang":"zh-CN","frontmatter":{"description":"Bellman-Ford 算法是一种计算带权有向图中单个源顶点到其他所有顶点的最短路径的算法。相比于相同问题的 Dijkstra 算法，Bellman-Ford 算法更为灵活，因为它能够处理某些边权重为负数的图。 Bellman-Ford 复杂度 最坏情况下的时间复杂度：O(V|E|) 最佳情况下的时间复杂度：O(E) 最坏情况下的空间复杂度：O(V)...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/lc/algorithms/graph/bellman-ford/"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"Bellman-Ford 算法"}],["meta",{"property":"og:description","content":"Bellman-Ford 算法是一种计算带权有向图中单个源顶点到其他所有顶点的最短路径的算法。相比于相同问题的 Dijkstra 算法，Bellman-Ford 算法更为灵活，因为它能够处理某些边权重为负数的图。 Bellman-Ford 复杂度 最坏情况下的时间复杂度：O(V|E|) 最佳情况下的时间复杂度：O(E) 最坏情况下的空间复杂度：O(V)..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-14T16:27:54.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-14T16:27:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Bellman-Ford 算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-14T16:27:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"复杂度","slug":"复杂度","link":"#复杂度","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1689352074000,"updatedTime":1689352074000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":0.49,"words":146},"filePathRelative":"lc/algorithms/graph/bellman-ford/README.md","localizedDate":"2023年7月15日","autoDesc":true}');export{e as data};
