const t=JSON.parse('{"key":"v-30b11965","path":"/lc/algorithms/dynamic-programming/maximum-product-subarray.html","title":"最大连续乘积子数组","lang":"zh-CN","frontmatter":{"description":"题目描述 给定一个整数数组 nums，找到一个具有最大乘积的连续子数组（至少包含一个数字）。 解题步骤 为了计算最大连续乘积子数组，我们可以使用动态规划的思想来解决问题。 1. 定义状态：我们可以将问题转化为对于每个位置的状态，即以该位置为结尾的最大乘积子数组的乘积。令 dpMax[i] 表示以第 i 个位置为结尾的最大乘积子数组的乘积。 2. 定义辅...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/lc/algorithms/dynamic-programming/maximum-product-subarray.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"最大连续乘积子数组"}],["meta",{"property":"og:description","content":"题目描述 给定一个整数数组 nums，找到一个具有最大乘积的连续子数组（至少包含一个数字）。 解题步骤 为了计算最大连续乘积子数组，我们可以使用动态规划的思想来解决问题。 1. 定义状态：我们可以将问题转化为对于每个位置的状态，即以该位置为结尾的最大乘积子数组的乘积。令 dpMax[i] 表示以第 i 个位置为结尾的最大乘积子数组的乘积。 2. 定义辅..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-14T16:27:54.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-14T16:27:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最大连续乘积子数组\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-14T16:27:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"解题步骤","slug":"解题步骤","link":"#解题步骤","children":[]}],"git":{"createdTime":1689352074000,"updatedTime":1689352074000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":1.95,"words":586},"filePathRelative":"lc/algorithms/dynamic-programming/maximum-product-subarray.md","localizedDate":"2023年7月15日","autoDesc":true}');export{t as data};
