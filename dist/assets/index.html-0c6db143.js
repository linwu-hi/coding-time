import{_ as n,r as i,o,c as l,a as e,b as a,e as t,d as s}from"./app-2477bd15.js";const c="/assets/tree-0470698e.jpeg",d={},h=s('<h1 id="树" tabindex="-1"><a class="header-anchor" href="#树" aria-hidden="true">#</a> 树</h1><ul><li><a href="binary-search-tree">二叉搜索树</a></li><li><a href="avl-tree">AVL树</a></li><li><a href="red-black-tree">红黑树</a></li><li><a href="segment-tree">线段树</a> - with min/max/sum range queries examples</li><li><a href="fenwick-tree">芬威克树/Fenwick Tree</a> (Binary Indexed Tree)</li></ul><p>在计算机科学中, <strong>树(tree)</strong> 是一种广泛使用的抽象数据类型(ADT)— 或实现此ADT的数据结构 — 模拟分层树结构, 具有根节点和有父节点的子树,表示为一组链接节点。</p><p>树可以被(本地地)递归定义为一个(始于一个根节点的)节点集, 每个节点都是一个包含了值的数据结构, 除了值,还有该节点的节点引用列表(子节点)一起。 树的节点之间没有引用重复的约束。</p><p>一棵简单的无序树; 在下图中:</p><p>标记为7的节点具有两个子节点, 标记为2和6; 一个父节点,标记为2,作为根节点, 在顶部,没有父节点。</p><figure><img src="'+c+'" alt="Tree" tabindex="0" loading="lazy"><figcaption>Tree</figcaption></figure><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',8),_={href:"https://en.wikipedia.org/wiki/Tree_(data_structure)",target:"_blank",rel:"noopener noreferrer"},p={href:"https://www.youtube.com/watch?v=oSWTXtMglKE&list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&index=8",target:"_blank",rel:"noopener noreferrer"};function u(f,g){const r=i("ExternalLinkIcon");return o(),l("div",null,[h,e("ul",null,[e("li",null,[e("a",_,[a("Wikipedia"),t(r)])]),e("li",null,[e("a",p,[a("YouTube"),t(r)])])])])}const x=n(d,[["render",u],["__file","index.html.vue"]]);export{x as default};
