const e=JSON.parse('{"key":"v-8d987bfc","path":"/js/base/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%92%8C%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6.html","title":"JavaScript事件流：深入理解事件处理和传播机制","lang":"zh-CN","frontmatter":{"description":"引言 JavaScript中的事件流是一种机制，用于描述和处理事件在DOM树中的传播过程。了解事件流的属性和工作原理对于编写高效的事件处理代码和实现复杂的交互功能至关重要。本文将详细介绍JavaScript事件流的发展流程、属性以及应用场景，并提供一些代码示例和引用资料，帮助读者深入理解并应用这一重要的前端技术。 1. 事件流的发展流程 事件流在前端的...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/js/base/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E5%92%8C%E4%BC%A0%E6%92%AD%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"JavaScript事件流：深入理解事件处理和传播机制"}],["meta",{"property":"og:description","content":"引言 JavaScript中的事件流是一种机制，用于描述和处理事件在DOM树中的传播过程。了解事件流的属性和工作原理对于编写高效的事件处理代码和实现复杂的交互功能至关重要。本文将详细介绍JavaScript事件流的发展流程、属性以及应用场景，并提供一些代码示例和引用资料，帮助读者深入理解并应用这一重要的前端技术。 1. 事件流的发展流程 事件流在前端的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-09T02:59:11.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-09T02:59:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript事件流：深入理解事件处理和传播机制\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-09T02:59:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"1. 事件流的发展流程","slug":"_1-事件流的发展流程","link":"#_1-事件流的发展流程","children":[{"level":3,"title":"1.1 传统的DOM0级事件","slug":"_1-1-传统的dom0级事件","link":"#_1-1-传统的dom0级事件","children":[]},{"level":3,"title":"1.2 DOM2级事件和addEventListener方法","slug":"_1-2-dom2级事件和addeventlistener方法","link":"#_1-2-dom2级事件和addeventlistener方法","children":[]},{"level":3,"title":"1.3 W3C DOM3级事件","slug":"_1-3-w3c-dom3级事件","link":"#_1-3-w3c-dom3级事件","children":[]},{"level":3,"title":"1.4 React与Virtual DOM","slug":"_1-4-react与virtual-dom","link":"#_1-4-react与virtual-dom","children":[]}]},{"level":2,"title":"2. 事件流的属性","slug":"_2-事件流的属性","link":"#_2-事件流的属性","children":[{"level":3,"title":"2.1 事件捕获阶段","slug":"_2-1-事件捕获阶段","link":"#_2-1-事件捕获阶段","children":[]},{"level":3,"title":"2.2 目标阶段","slug":"_2-2-目标阶段","link":"#_2-2-目标阶段","children":[]},{"level":3,"title":"2.3 事件冒泡阶段","slug":"_2-3-事件冒泡阶段","link":"#_2-3-事件冒泡阶段","children":[]},{"level":3,"title":"2.4 事件对象","slug":"_2-4-事件对象","link":"#_2-4-事件对象","children":[]}]},{"level":2,"title":"3. 事件流的应用场景","slug":"_3-事件流的应用场景","link":"#_3-事件流的应用场景","children":[{"level":3,"title":"3.1 事件处理","slug":"_3-1-事件处理","link":"#_3-1-事件处理","children":[]},{"level":3,"title":"3.2 事件代理","slug":"_3-2-事件代理","link":"#_3-2-事件代理","children":[]},{"level":3,"title":"3.3 事件委托","slug":"_3-3-事件委托","link":"#_3-3-事件委托","children":[]}]},{"level":2,"title":"4. 示例代码","slug":"_4-示例代码","link":"#_4-示例代码","children":[]},{"level":2,"title":"5. 参考资料","slug":"_5-参考资料","link":"#_5-参考资料","children":[]}],"git":{"createdTime":1688871551000,"updatedTime":1688871551000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":6.11,"words":1833},"filePathRelative":"js/base/深入理解事件处理和传播机制.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
