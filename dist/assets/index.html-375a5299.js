import{_ as t,r as p,o,c,a as n,b as a,d as e,e as i}from"./app-0301958d.js";const l={},r=i(`<h1 id="fenwick树-二进制索引树" tabindex="-1"><a class="header-anchor" href="#fenwick树-二进制索引树" aria-hidden="true">#</a> Fenwick树 / 二进制索引树</h1><p>在计算机科学中，<strong>Fenwick树</strong>或<strong>二进制索引树</strong>是一种可以高效更新元素和计算前缀和的数据结构。</p><p>与一个平坦的数字数组相比，Fenwick树在两个操作之间实现了更好的平衡：元素更新和前缀和计算。在一个平坦的<code>n</code>个数字的数组中，你可以选择存储元素或前缀和。在第一种情况下，计算前缀和需要线性时间；在第二种情况下，更新数组元素需要线性时间（在两种情况下，另一个操作可以在常数时间内完成）。Fenwick树可以在<code>O(log n)</code>时间内执行这两种操作。这是通过将数字表示为一棵树来实现的，其中每个节点的值是该子树中数字的和。树结构允许仅使用<code>O(log n)</code>个节点访问执行操作。</p><h2 id="实现说明" tabindex="-1"><a class="header-anchor" href="#实现说明" aria-hidden="true">#</a> 实现说明</h2><p>二进制索引树表示为一个数组。二进制索引树的每个节点存储了给定数组的一些元素的和。二进制索引树的大小等于输入数组的大小<code>n</code>。在当前的实现中，我们将大小设置为<code>n+1</code>以方便实现。所有的索引都是基于1的。</p><p>在下图中，您可以看到通过逐个插入来创建数组<code>[1, 2, 3, 4, 5]</code>的二进制索引树的动画示例。</p><figure><img src="https://www.geeksforgeeks.org/wp-content/uploads/BITSum.png" alt="Binary Indexed Tree" tabindex="0" loading="lazy"><figcaption>Binary Indexed Tree</figcaption></figure><p>在下图中，您可以看到一个动画示例，通过插入的方式创建了数组<code>[1, 2, 3, 4, 5]</code>的二进制索引树。</p><figure><img src="https://upload.wikimedia.org/wikipedia/commons/d/dc/BITDemo.gif" alt="Fenwick Tree" tabindex="0" loading="lazy"><figcaption>Fenwick Tree</figcaption></figure><h2 id="完整代码" tabindex="-1"><a class="header-anchor" href="#完整代码" aria-hidden="true">#</a> 完整代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">FenwickTree</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * Constructor creates empty fenwick tree of size &#39;arraySize&#39;,
   * however, array size is size+1, because index is 1-based.
   *
   * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">arraySize</span>
   */</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">arraySize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>arraySize <span class="token operator">=</span> arraySize<span class="token punctuation">;</span>

    <span class="token comment">// Fill tree array with zeros.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>treeArray <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arraySize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Adds value to existing value at position.
   *
   * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">position</span>
   * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">value</span>
   * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>FenwickTree<span class="token punctuation">}</span></span>
   */</span>
  <span class="token function">increase</span><span class="token punctuation">(</span><span class="token parameter">position<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> position <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arraySize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Position is out of allowed range&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> position<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arraySize<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>treeArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Query sum from index 1 to position.
   *
   * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">position</span>
   * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
   */</span>
  <span class="token function">query</span><span class="token punctuation">(</span><span class="token parameter">position</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> position <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arraySize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Position is out of allowed range&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> position<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">-=</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>treeArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * Query sum from index leftIndex to rightIndex.
   *
   * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">leftIndex</span>
   * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">rightIndex</span>
   * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
   */</span>
  <span class="token function">queryRange</span><span class="token punctuation">(</span><span class="token parameter">leftIndex<span class="token punctuation">,</span> rightIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftIndex <span class="token operator">&gt;</span> rightIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Left index can not be greater than right one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftIndex <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>rightIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>rightIndex<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>leftIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,12),u={href:"https://en.wikipedia.org/wiki/Fenwick_tree",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.youtube.com/watch?v=CWDQJGaN1gY&index=18&t=0s&list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8",target:"_blank",rel:"noopener noreferrer"};function m(v,b){const s=p("ExternalLinkIcon");return o(),c("div",null,[r,n("ul",null,[n("li",null,[n("a",u,[a("维基百科"),e(s)])]),n("li",null,[n("a",k,[a("GeeksForGeeks"),e(s)])]),n("li",null,[n("a",d,[a("YouTube"),e(s)])])])])}const y=t(l,[["render",m],["__file","index.html.vue"]]);export{y as default};
