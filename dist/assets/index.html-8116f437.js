const t=JSON.parse('{"key":"v-48d18965","path":"/lc/algorithms/graph/floyd-warshall/","title":"Floyd-Warshall 算法","lang":"zh-CN","frontmatter":{"description":"在计算机科学中，Floyd-Warshall 算法是一种用于在具有正或负边权重（但没有负循环）的加权图中找到最短路径的算法。该算法的一次执行可以找到所有顶点对之间的最短路径长度（加权之和）。尽管它不返回路径的详细信息，但可以通过对算法进行简单修改来重构路径。 算法 Floyd-Warshall 算法比较了图中每对顶点之间的所有可能路径。在图中进行 O(...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/lc/algorithms/graph/floyd-warshall/"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"Floyd-Warshall 算法"}],["meta",{"property":"og:description","content":"在计算机科学中，Floyd-Warshall 算法是一种用于在具有正或负边权重（但没有负循环）的加权图中找到最短路径的算法。该算法的一次执行可以找到所有顶点对之间的最短路径长度（加权之和）。尽管它不返回路径的详细信息，但可以通过对算法进行简单修改来重构路径。 算法 Floyd-Warshall 算法比较了图中每对顶点之间的所有可能路径。在图中进行 O(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-14T16:27:54.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-14T16:27:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Floyd-Warshall 算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-14T16:27:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"算法","slug":"算法","link":"#算法","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1689352074000,"updatedTime":1689352074000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":1.71,"words":513},"filePathRelative":"lc/algorithms/graph/floyd-warshall/README.md","localizedDate":"2023年7月15日","autoDesc":true}');export{t as data};
