const e=JSON.parse('{"key":"v-2d3b4b9e","path":"/ts/advance/%E7%B1%BB%E5%9E%8B%E5%AE%88%E5%8D%AB.html","title":"类型守卫","lang":"zh-CN","frontmatter":{"description":"概述 在 TypeScript 中，类型守卫可以用于在运行时检查变量的类型，并在代码块内部将变量的类型范围缩小到更具体的类型。这种类型收窄可以让 TypeScript 编译器更好地理解我们代码的意图，从而提供更准确的类型推断和类型检查。 类型守卫通常使用类型断言、类型谓词、typeof 操作符、instanceof 操作符或自定义的谓词函数来判断变量的...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/ts/advance/%E7%B1%BB%E5%9E%8B%E5%AE%88%E5%8D%AB.html"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"类型守卫"}],["meta",{"property":"og:description","content":"概述 在 TypeScript 中，类型守卫可以用于在运行时检查变量的类型，并在代码块内部将变量的类型范围缩小到更具体的类型。这种类型收窄可以让 TypeScript 编译器更好地理解我们代码的意图，从而提供更准确的类型推断和类型检查。 类型守卫通常使用类型断言、类型谓词、typeof 操作符、instanceof 操作符或自定义的谓词函数来判断变量的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-26T16:27:49.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-08-26T16:27:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型守卫\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-26T16:27:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"typeof 类型守卫","slug":"typeof-类型守卫","link":"#typeof-类型守卫","children":[]},{"level":2,"title":"instanceof 类型守卫","slug":"instanceof-类型守卫","link":"#instanceof-类型守卫","children":[]},{"level":2,"title":"使用自定义谓词函数类型守卫","slug":"使用自定义谓词函数类型守卫","link":"#使用自定义谓词函数类型守卫","children":[]},{"level":2,"title":"联合类型守卫","slug":"联合类型守卫","link":"#联合类型守卫","children":[{"level":3,"title":"使用 in 操作符进行类型守卫","slug":"使用-in-操作符进行类型守卫","link":"#使用-in-操作符进行类型守卫","children":[]},{"level":3,"title":"控制流类型守卫","slug":"控制流类型守卫","link":"#控制流类型守卫","children":[]},{"level":3,"title":"真值类型守卫","slug":"真值类型守卫","link":"#真值类型守卫","children":[]},{"level":3,"title":"自定义类型判断式（Type Predicates）守卫","slug":"自定义类型判断式-type-predicates-守卫","link":"#自定义类型判断式-type-predicates-守卫","children":[]}]}],"git":{"createdTime":1688871551000,"updatedTime":1693067269000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":2}]},"readingTime":{"minutes":5.54,"words":1662},"filePathRelative":"ts/advance/类型守卫.md","localizedDate":"2023年7月9日","autoDesc":true}');export{e as data};
