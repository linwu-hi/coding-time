const t=JSON.parse('{"key":"v-527a38eb","path":"/lc/algorithms/graph/kruskal/","title":"克鲁斯卡尔算法","lang":"zh-CN","frontmatter":{"description":"克鲁斯卡尔算法是一种最小生成树算法，它找到连接森林中的任意两棵树的权重最小的边。它是一种贪心算法，在图论中用于在连通的带权图中添加成本递增的边来找到最小生成树。这意味着它找到一组边，形成一个包含每个顶点的树，使得树中所有边的权重之和最小。如果图不连通，则它找到一个最小生成森林（每个连通分量的最小生成树）。 Kruskal Algorithm Krusk...","head":[["meta",{"property":"og:url","content":"https://www.coding-time.cn/lc/algorithms/graph/kruskal/"}],["meta",{"property":"og:site_name","content":"编程时光"}],["meta",{"property":"og:title","content":"克鲁斯卡尔算法"}],["meta",{"property":"og:description","content":"克鲁斯卡尔算法是一种最小生成树算法，它找到连接森林中的任意两棵树的权重最小的边。它是一种贪心算法，在图论中用于在连通的带权图中添加成本递增的边来找到最小生成树。这意味着它找到一组边，形成一个包含每个顶点的树，使得树中所有边的权重之和最小。如果图不连通，则它找到一个最小生成森林（每个连通分量的最小生成树）。 Kruskal Algorithm Krusk..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-14T16:27:54.000Z"}],["meta",{"property":"article:author","content":"linwu"}],["meta",{"property":"article:modified_time","content":"2023-07-14T16:27:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"克鲁斯卡尔算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-14T16:27:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"linwu\\",\\"url\\":\\"https://www.coding-time.cn\\",\\"email\\":\\"linwu.hi@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"最小生成树","slug":"最小生成树","link":"#最小生成树","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1689352074000,"updatedTime":1689352074000,"contributors":[{"name":"linwu-hi","email":"linwu.hi@gmail.com","commits":1}]},"readingTime":{"minutes":1.53,"words":459},"filePathRelative":"lc/algorithms/graph/kruskal/README.md","localizedDate":"2023年7月15日","autoDesc":true}');export{t as data};
