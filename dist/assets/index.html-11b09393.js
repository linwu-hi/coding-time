import{_ as r,r as t,o as s,c as o,a as e,b as a,e as i,d}from"./app-2d6feb9f.js";const l={},c=d(`<h1 id="哈密尔顿路径" tabindex="-1"><a class="header-anchor" href="#哈密尔顿路径" aria-hidden="true">#</a> 哈密尔顿路径</h1><p><strong>哈密尔顿路径</strong>（或称为<strong>可遍历路径</strong>）是指在无向或有向图中恰好访问每个顶点一次的路径。<strong>哈密尔顿环</strong>（或<strong>哈密尔顿回路</strong>）是一条既是哈密尔顿路径又是环的路径。确定图中是否存在这样的路径和环是<strong>哈密尔顿路径问题</strong>。</p><figure><img src="https://upload.wikimedia.org/wikipedia/commons/6/6c/Hamiltonian_path_3d.svg" alt="哈密尔顿回路" tabindex="0" loading="lazy"><figcaption>哈密尔顿回路</figcaption></figure><p>一个十二面体的可能的哈密尔顿回路示例，如图中的红色路径所示 - 像所有的柏拉图立体一样，十二面体是哈密尔顿图。</p><h2 id="naive-算法" tabindex="-1"><a class="header-anchor" href="#naive-算法" aria-hidden="true">#</a> Naive 算法</h2><p>生成所有可能的顶点配置，并打印满足给定约束条件的配置。共有 <code>n!</code>（n 的阶乘）种配置。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>当还有未尝试的配置时
{
   生成下一个配置
   如果（这个配置的连续顶点之间有边，并且最后一个顶点到第一个顶点有边）
   {
      打印这个配置;
      中断;
   }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="回溯算法" tabindex="-1"><a class="header-anchor" href="#回溯算法" aria-hidden="true">#</a> 回溯算法</h2><p>创建一个空的路径数组，并将顶点 <code>0</code> 添加到其中。从顶点 <code>1</code> 开始添加其他顶点。在添加一个顶点之前，检查它是否与先前添加的顶点相邻且尚未添加。如果找到这样的顶点，则将其作为解的一部分添加。如果找不到这样的顶点，则返回 false。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,10),h={href:"https://en.wikipedia.org/wiki/Hamiltonian_path",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.youtube.com/watch?v=dQr4wZCiJJ4&list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.geeksforgeeks.org/backtracking-set-7-hamiltonian-cycle/",target:"_blank",rel:"noopener noreferrer"};function p(v,_){const n=t("ExternalLinkIcon");return s(),o("div",null,[c,e("ul",null,[e("li",null,[e("a",h,[a("维基百科上的哈密尔顿路径"),i(n)])]),e("li",null,[e("a",u,[a("YouTube 上的哈密尔顿路径"),i(n)])]),e("li",null,[e("a",g,[a("GeeksForGeeks 上的哈密尔顿回路"),i(n)])])])])}const b=r(l,[["render",p],["__file","index.html.vue"]]);export{b as default};
